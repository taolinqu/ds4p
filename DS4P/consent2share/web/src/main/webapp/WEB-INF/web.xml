<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	version="2.5"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<display-name>consent2share</display-name>

	<description>consent2share application</description>

	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<!-- setting root application context -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:META-INF/spring/applicationContext*.xml</param-value>
	</context-param>
	<context-param>
        <param-name>spring.profiles.active</param-name>
        <param-value>runtime</param-value>
    </context-param>
    
    <listener>  
        <listener-class>  
            org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>  
    </listener>  
    
	


	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Handles Spring requests and set MVC application context -->
	<servlet>
		<servlet-name>consent2share</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>WEB-INF/spring/webmvc-config.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>consent2share</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<session-config>
		<session-timeout>10</session-timeout>
	</session-config>
	
	<error-page>
		<exception-type>java.lang.Exception</exception-type>
		<location>/views/uncaughtException.html</location>
	</error-page>
	
	<error-page>
		<error-code>404</error-code>
		<location>/views/error404.html</location>
	</error-page>
	<error-page>
		<!-- Missing login -->
		<error-code>401</error-code>
		<location>/index.html</location>
	</error-page>
	<error-page>
		<!-- Forbidden directory listing -->
		<error-code>403</error-code>
		<location>/error.html</location>
	</error-page>

	<error-page>
		<error-code>500</error-code>
		<location>/views/uncaughtException.html</location>
	</error-page>

 	<error-page>
		<!-- Unsupported servlet method -->
		<error-code>503</error-code>
		<location>/views/error404.html</location>
	</error-page>


	
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>


	<!-- Enable escaping of form submission contents -->
	<!-- <context-param> <param-name>defaultHtmlEscape</param-name> <param-value>true</param-value> 
		</context-param> <filter> <filter-name>CharacterEncodingFilter</filter-name> 
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class> 
		<init-param> <param-name>encoding</param-name> <param-value>UTF-8</param-value> 
		</init-param> <init-param> <param-name>forceEncoding</param-name> <param-value>true</param-value> 
		</init-param> </filter> <filter-mapping> <filter-name>CharacterEncodingFilter</filter-name> 
		<url-pattern>/*</url-pattern> </filter-mapping> <filter-mapping> <filter-name>HttpMethodFilter</filter-name> 
		<url-pattern>/*</url-pattern> </filter-mapping> -->


	<!-- Since browsers currently only support GET and POST, a common technique 
		- used by the Prototype library, for instance - is to use a normal POST with 
		an additional hidden form field (_method) to pass the "real" HTTP method 
		along. This filter reads that parameter and changes the HttpServletRequestWrapper.getMethod() 
		return value accordingly. -->
	<!-- <filter> <filter-name>HttpMethodFilter</filter-name> <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class> 
		</filter> -->


	<!-- <filter> <filter-name>Spring OpenEntityManagerInViewFilter</filter-name> 
		<filter-class>org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter</filter-class> 
		</filter> <filter-mapping> <filter-name>Spring OpenEntityManagerInViewFilter</filter-name> 
		<url-pattern>/*</url-pattern> </filter-mapping> -->

	<security-constraint>
		<web-resource-collection>
			<web-resource-name>consent2share</web-resource-name>
			<url-pattern>/*</url-pattern>
		</web-resource-collection>
		<user-data-constraint>
			<transport-guarantee>CONFIDENTIAL</transport-guarantee>
		</user-data-constraint>
	</security-constraint>
		
		
</web-app>
